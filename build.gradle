/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */
group = 'org.victoryw.idGenerator'
version = '1.0'
// Apply the java-library plugin to add support for Java Library

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}


apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: "com.jfrog.bintray"
apply plugin: "maven-publish"

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}
// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

checkstyle {
    configFile = rootProject.file('checkstyle.xml')
    toolVersion ="7.8.1"
    checkstyleTest {}.enabled = false
}

jacoco {
    // change the version of Jacoco in use
    toolVersion = '0.7.9'
}

jacoco {
    reportsDir = file("$buildDir/customJacocoReportDir")
}

test {
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}


dependencies {
    testImplementation 'junit:junit:4.12'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    publications = ['MyPublication']

    pkg {
        repo = 'public'
        name = 'id-generator'

        licenses = ['MIT']
        vcsUrl = 'https://github.com/victoryw/id-generator'

    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}


def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "developer-id"
            name "developer-name"
            email "dev@d.com"
        }
    }

    scm {
        url "https://github.com/yourgithubaccount/example"
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Your description of the lib')
                root.appendNode('name', 'Your name of the lib')
                root.appendNode('url', 'https://site_for_lib.tld')
                root.children().last() + pomConfig
            }
        }
    }
}
